{"version":3,"sources":["App.module.css","Textbox.jsx","App.js","index.js"],"names":["module","exports","TextBox","useState","message","setMessage","GET_MESSAGE","gql","CHANGE_MESSAGE","useQuery","loading","error","data","useMutation","variables","refetchQueries","updateMessage","className","styles","textbox","text","textarea","TextareaAutosize","rowsMax","aria-label","placeholder","onChange","e","target","value","button","Button","variant","color","onClick","client","ApolloClient","uri","window","location","href","App","container","ReactDOM","render","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,QAAU,qBAAqB,KAAO,kBAAkB,SAAW,sBAAsB,OAAS,sB,mfCKvJ,IAwCeC,EAxCC,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,KAIZC,EAAcC,YAAH,KAMXC,EAAiBD,YAAH,KAVF,EAgBeE,YAASH,GAAlCI,EAhBU,EAgBVA,QAASC,EAhBC,EAgBDA,MAAOC,EAhBN,EAgBMA,KAhBN,EAkBMC,YAAYL,EAAgB,CAChDM,UAAW,CAAEV,WAAWW,eAAgB,CAAC,kBADtCC,EAlBW,oBAsBlB,OAAIN,EAAgB,yCAChBC,EAAc,uCAGd,yBAAKM,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAOE,MACnB,gCAASR,EAAKR,UAElB,yBAAKa,UAAWC,IAAOG,UACnB,kBAACC,EAAA,EAAD,CAAkBC,QAAS,EAAGC,aAAW,iBAAiBC,YAAY,cAAcC,SAAU,SAAAC,GAAC,OAAItB,EAAWsB,EAAEC,OAAOC,WAE3H,yBAAKZ,UAAWC,IAAOY,QACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASlB,GAArD,kBCjCVmB,EAAS,IAAIC,IAAa,CAC9BC,IAAKC,OAAOC,SAASC,KAAK,YAcbC,EAXH,WACR,OACE,kBAAC,IAAD,CAAgBN,OAAQA,GACxB,yBAAKlB,UAAWC,IAAOwB,WACnB,mDAEJ,kBAAC,EAAD,QCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aa95b1bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"textbox\":\"App_textbox__13fAV\",\"text\":\"App_text__PPQbm\",\"textarea\":\"App_textarea__NtVfp\",\"button\":\"App_button__13pio\"};","import React, { useState } from 'react';\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport styles from './App.module.css';\nimport { Button, TextField, TextareaAutosize } from '@material-ui/core';\n\nconst TextBox = () => {\n    \n    const [message, setMessage] = useState('')\n\n    const GET_MESSAGE = gql`\n      query fetchMessage {\n        message\n      }\n    `;\n\n    const CHANGE_MESSAGE = gql`\n        mutation updateMessage($message: String!) {\n            updateMessage(message: $message)\n        }\n    `;\n    \n    const { loading, error, data } = useQuery(GET_MESSAGE);\n    \n    const [updateMessage] = useMutation(CHANGE_MESSAGE, {\n        variables: { message }, refetchQueries: [\"fetchMessage\"]\n    });\n    \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    \n    return (\n        <div className={styles.textbox}>\n            <div className={styles.text}>\n                <strong>{data.message}</strong>  \n            </div> \n            <div className={styles.textarea}>   \n                <TextareaAutosize rowsMax={4} aria-label=\"empty textarea\" placeholder=\"Insert Text\" onChange={e => setMessage(e.target.value)}/>\n            </div> \n            <div className={styles.button}>   \n                <Button variant=\"contained\" color=\"primary\" onClick={updateMessage}>Update Text</Button> \n            </div>           \n        </div>\n    );\n}\n\nexport default TextBox;\n\n  ","import ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport React from 'react';\nimport TextBox from './Textbox';\nimport styles from './App.module.css';\n\n\nconst client = new ApolloClient({\n  uri: window.location.href+'graphql',\n});\n\nconst App = () => {\n    return (\n      <ApolloProvider client={client}>\n      <div className={styles.container}>\n          <h2>Twisker Assignment</h2>\n      </div>\n      <TextBox></TextBox>\n      </ApolloProvider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')); "],"sourceRoot":""}